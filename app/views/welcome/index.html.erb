<%= javascript_include_tag "gmap/gmap3" %>
<div class="tabbable">
  <ul class="nav nav-tabs ">
    <li class="active"><a href="#tab1" data-toggle="tab">Status dos Agentes</a></li>
    <li><a href="#tab2" data-toggle="tab">Resumo Anatel</a></li>
    <li><a id="tab_resumo_med" href="#tab3" data-toggle="tab">Resumo Medições</a></li>
  </ul>
  <div class="tab-content tab-content-border">
    <div class="tab-pane active" id="tab1">
      <div class="row-fluid">
        <div class="span7">
          <!--
          lista(botoes) de probes(agentes):
            0-Inativo- Cinza
            1- Ativo - Verde
            2- Warning-Amarelo
            3- Erro-Vermelho
            -->

          <% Probe.order('status DESC, city ASC').all.each do |probe| %>
              <a id="ag<%= probe.id %>" onmouseover="$(this).tooltip({placement: 'right',html: true, title: htmlContent('<%= probe.name %>','<%=probe.ipaddress %>','<%= probe.connection_profile.name%>','<%= probe.plan.name_with_throughput %>', '<%= probe.status %>' ) })"
                 class="btn btn-<%= probe.pretty_status %>"
                 onclick="$('#gMap').gmap3('get').panTo(new google.maps.LatLng(<%= probe.latitude %>,<%= probe.longitude %>)); $('#gMap').gmap3('get').setZoom(14)" title="" href="#" style="margin: 5px">
                <%= image_tag "icons/"+probe.type+"16.png" %>
                <%= probe.name %><br/>
                <%= probe.city %>
                /
                <%= probe.state.upcase %>
              </a>
          <% end %>
        </div>
        <div class="span5">
          <div id="gMap" class="googleMap"></div>
        </div>
      </div>

    </div>
    <div class="tab-pane" id="tab2">
      <div class="row-fluid">
        <div class="span12">
          <p> Sintetização com os dados anatel.</p>
        </div>
      </div>
    </div>
    <div class="tab-pane" id="tab3">
      <div class="row-fluid">
        <div class="span12">
          <div style="float:right">
          <div class="btn btn-primary"  onclick="reload()">Atualizar</div>
          <input type="checkbox" name="auto_reload" onclick="autoReload(this)"><span> a cada 5 minutos</span></input>
          </div>
          <br/><br/>
          <div id="loading"></div>
          <div id="all_probes">
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
    var interval;
    $(function () {
        $('#tab_resumo_med').bind('click', function (e) {
            reload();
        });

    });

    function autoReload(id){
        if(id.checked == false){
           interval = clearInterval(interval); }
        else interval = self.setInterval(function(){reload()},300000); //5min

    }

    function htmlContent(name, ip, con, plan, status) {
        var html = "";
        var st = "";

        switch (status) {
            case '0':
                st = "INATIVO";
                break;
            case '1':
                st = "ATIVO";
                break;
            case '2':
                st = "ATENÇÃO";
                break;
            case '3':
                st = "ERRO";
                break;
        }

        html = "<b>" + name + "</b><br/>" +
                "Status: " + st + "<br/>" +
                "Hostname: " + ip + "<br/>" +
                "Conexão: " + con + "<br/>" +
                "Plano: " + plan + "<br/>";

        return html
    }

    function loadProbesLocation() {
        var do_list = [];
        $.ajax({
            type: "POST",
            url: "<%= probes_load_location_url %>",
            async: false,
            error: function (data, errorThrown) {
                alert("Erro! Impossível localizar Agentes");
            },
            success: function (data) {
                for (i = 0; i < data.length; i++) {
                    switch (data[i]["status"]) {
                        case 0:
                            do_list.push({lat: data[i]["latitude"], lng: data[i]["longitude"], data: {type: data[i]["type"], address: data[i]["address"], name: data[i]["name"] }, options: { icon: '<%= asset_path("icons/pin_gray.png")%>'}});
                            break;
                        case 1:
                            do_list.push({lat: data[i]["latitude"], lng: data[i]["longitude"], data: {type: data[i]["type"], address: data[i]["address"], name: data[i]["name"]}, options: { icon: '<%= asset_path("icons/pin_green.png")%>'}});
                            break;
                        case 2:
                            do_list.push({lat: data[i]["latitude"], lng: data[i]["longitude"], data: {type: data[i]["type"], address: data[i]["address"], name: data[i]["name"]}, options: { icon: '<%= asset_path("icons/pin_yellow.png")%>'}});
                            break;
                        case 3:
                            do_list.push({lat: data[i]["latitude"], lng: data[i]["longitude"], data: {type: data[i]["type"], address: data[i]["address"], name: data[i]["name"]}, options: { icon: '<%= asset_path("icons/pin_red.png")%>'}});
                            break;
                    }

                }

            }
        });
        return do_list
    }

    $(function () {
        $("#gMap").gmap3({
            map: {
                options: {
                    center: [-14.904325, -48.209743],
                    zoom: 4,
                    zoomControl: true,
                    zoomControlOptions: {
                        style: google.maps.ZoomControlStyle.LARGE
                    },
                    panControl: true,
                    //mapTypeId: google.maps.MapTypeId.TERRAIN,
                    mapTypeControl: true,
                    mapTypeControlOptions: {
                        style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                    },
                    navigationControl: false,
                    scrollwheel: true,
                    streetViewControl: false
                }
            },
            marker: {
                values: loadProbesLocation(),
                cluster: {
                    radius: 15,
                    // This style will be used for clusters with more than 0 markers
                    0: {
                        content: "<div class='cluster cluster-1'>CLUSTER_COUNT</div>",
                        width: 53,
                        height: 52
                    },
                    // This style will be used for clusters with more than 20 markers
                    20: {
                        content: "<div class='cluster cluster-2'>CLUSTER_COUNT</div>",
                        width: 56,
                        height: 55
                    },
                    // This style will be used for clusters with more than 50 markers
                    50: {
                        content: "<div class='cluster cluster-3'>CLUSTER_COUNT</div>",
                        width: 66,
                        height: 65
                    }
                },
                /*options: {
                 icon: new google.maps.MarkerImage("https://maps.gstatic.com/mapfiles/icon_green.png")
                 },*/
                events: {
                    mouseover: function (marker, event, context) {
                        $(this).gmap3(
                                {clear: "overlay"},
                                {
                                    overlay: {
                                        latLng: marker.getPosition(),
                                        options: {
                                            content: "<div class='infobulle'>" +
                                                    "<div class='bg'></div>" +
                                                    "<div class='text'>" + (context.data.type == "linux" ? "<img src=" + '<%= asset_path("icons/linux16.png")%>' + ">" : "<img src=" + '<%= asset_path("icons/android.png")%>' + ">") + context.data.name + "<p>" + context.data.address + "</p></div>" +
                                                    "</div>" +
                                                    "<div class='arrow'></div>",
                                            offset: {
                                                x: -46,
                                                y: -73
                                            }
                                        }
                                    }
                                });
                    },
                    mouseout: function () {
                        $(this).gmap3({clear: "overlay"});
                    }
                }

            }
        });
    });


    function reload() {
        $('#loading').append('carregando dados...');
        $('#all_probes').empty();
        $.ajax({
            type: 'GET',
            url: "<%= welcome_stats_url %>",
            datatype: "json",
            //data: {},
            success: function (response) {
                //alert(response.length);
                var context =
                        '<table id="table_bruto" class="table table-bordered table-hover table-condensed sortable" >' +
                        '<thead>' +
                        '<tr>' +
                        '<th ></th>' +
                        '<th style="text-align: center">Sonda</th>' +
                        '<th style="text-align: center">Localização</th>' +
                        '<th style="text-align: center">Última Atualização</th>' +
                        '<th style="text-align: center">Throughput TCP<br/>&dArr;/&uArr;(Kbps)</th>' +
                        '<th  style="text-align: center;">Throughput HTTP<br/>&dArr;/&uArr; (Kbps)</th>' +
                        '<th  style="text-align: center">Throughput UDP<br/>&dArr;/&uArr; (Kbps)</th>' +
                        '<th  style="text-align: center">RTT (ms)</th>' +
                        '<th  style="text-align: center">Jitter<br/>&dArr;/&uArr; (ms)</th>' +
                        '<th  style="text-align: center">Loss<br/>&dArr;/&uArr; (%)</th>' +
                        '<th  style="text-align: center">Pom<br/>&dArr;/&uArr; (%)</th>' +
                        '</tr>' +
                        '</thead><tbody>';

                for (var i in response) {
                    var color = '';
                    switch (response[i]['status']) {
                        case 0:
                            color = 'rgba(94,91,91,0.37)';
                            break;
                        case 1:
                            color = 'rgba(9,187,8,0.30)';
                            break;
                        case 2:
                            color = 'rgba(210,208,26,0.49)';
                            break;
                        case 3:
                            color = 'rgba(210,10,20,0.46)';
                            break;
                    }

                    context = context +
                            '<tr>' +
                            '<td style="background-color:' + color + ';width: 25px;"></td>' +
                            '<td style="text-align: center">' + response[i]['name'] + '</td>' +
                            '<td style="text-align: center">' + response[i]['city'] + ' -' + response[i]['state'] + '</td>';

                    if (typeof(response[i]['results']) != 'undefined') {

                        if (typeof(response[i]['kpi']) == 'undefined' || response[i]['kpi'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else  context = context + '<td style="text-align: center" sorttable_customkey="'+moment(response[i]['kpi']['timestamp']) +'">' + moment(response[i]['kpi']['timestamp']).format("DD/MM/YYYY HH:mm") + '</td>';

                        if (response[i]['results']['throughput_tcp'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else  context = context + '<td style="text-align: center">' + $u(response[i]['results']['throughput_tcp']['download'], response[i]['results']['throughput_tcp']['db_unit']).as(response[i]['results']['throughput_tcp']['view_unit']).val() +
                                '/' + $u(response[i]['results']['throughput_tcp']['upload'], response[i]['results']['throughput_tcp']['db_unit']).as(response[i]['results']['throughput_tcp']['view_unit']).val() + '</td>';

                        if (response[i]['results']['throughput_http'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else  context = context + '<td style="text-align: center">' + $u(response[i]['results']['throughput_http']['download'], response[i]['results']['throughput_http']['db_unit']).as(response[i]['results']['throughput_http']['view_unit']).val() +
                                '/' + $u(response[i]['results']['throughput_http']['upload'], response[i]['results']['throughput_http']['db_unit']).as(response[i]['results']['throughput_tcp']['view_unit']).val() + '</td>';

                        if (response[i]['results']['throughput'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else context = context + '<td style="text-align: center">' +
                                $u(response[i]['results']['throughput']['download'], response[i]['results']['throughput']['db_unit']).as(response[i]['results']['throughput']['view_unit']).val()
                                + '/' +
                                $u(response[i]['results']['throughput']['upload'], response[i]['results']['throughput']['db_unit']).as(response[i]['results']['throughput_tcp']['view_unit']).val() + '</td>';

                        if (response[i]['results']['rtt'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else context = context + '<td style="text-align: center">' +
                                $u(response[i]['results']['rtt']['upload'], response[i]['results']['rtt']['db_unit']).as(response[i]['results']['rtt']['view_unit']).val() + '</td>';

                        if (response[i]['results']['jitter'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else context = context + '<td style="text-align: center">' +
                                $u(response[i]['results']['jitter']['download'], response[i]['results']['jitter']['db_unit']).as(response[i]['results']['jitter']['view_unit']).val() +
                                '/' + $u(response[i]['results']['jitter']['upload'], response[i]['results']['jitter']['db_unit']).as(response[i]['results']['jitter']['view_unit']).val() + '</td>';

                        if (response[i]['results']['loss'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else context = context + '<td style="text-align: center">' +
                                $u(response[i]['results']['loss']['download'], response[i]['results']['loss']['db_unit']).as(response[i]['results']['loss']['view_unit']).val() +
                                '/' + $u(response[i]['results']['loss']['upload'], response[i]['results']['loss']['db_unit']).as(response[i]['results']['loss']['view_unit']).val() + '</td>';

                        if (response[i]['results']['pom'] == null)
                            context = context + '<td style="text-align: center">NULL</td>';
                        else context = context + '<td style="text-align: center">' + response[i]['results']['pom']['download'] + '/' + response[i]['results']['pom']['download'] + '</td>';
                        context = context + '</tr>';
                    } else {
                        context = context + '<td colspan="8"  style="background-color: rgba(170,170,170,0.57) ;text-align: center">Não há dados para esta sonda.</td>';
                    }

                }
                context = context + '</tbody></table>';
                $('#all_probes').append(context);
                var newTableObject = document.getElementById('table_bruto');
                sorttable.makeSortable(newTableObject);
                $('#loading').empty();
            },
            error: function (e) {
                console.log(e.message);
            }
        });

    }
</script>