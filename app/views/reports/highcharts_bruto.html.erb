<div id="box-<%= @idName %>" class="row-fluid">
  <div class="span12">
    <div class="row-fluid">
      <div class="span12">
        <div id="chart-<%= @idName %>" style="height:300px;"></div>
      </div>
    </div>
    <div class="row-fluid">
      <div class="span12">
        <div class="chart-bottom" style="padding-top: 10px;">
          <div class="btn btn-danger" style="float:right; margin-bottom: 20px" onclick="jQuery('#box-<%=@idName%>').remove();">Remover</div>
          <a id="export-<%= @idName %>" class="btn btn-success" style="float:right; margin-right: 5px ;margin-bottom: 20px" href="<%= reports_csv_bruto_url @exportFileName+".csv" %>?<%= @exportParams %>">Exportar
            CSV</a>
          <a id="exportxls-<%= @idName %>" class="btn btn-success" style="float:right; margin-right: 5px ;margin-bottom: 20px" href="<%= reports_xls_bruto_url @exportFileName+".xls" %>?<%= @exportParams %>">Exportar
            XLS</a>

          <div id="legend-<%= @idName %>" style="float:right; margin-right: 5px ;margin-bottom: 20px">Ponto Atual:</div>
        </div>
      </div>
    </div>
  </div>
</div>
<script type="text/javascript">
    var series = [<% @series.each do |key,series| %>{
            name: "<%= series[:name] %>",
            data: [
                <% series[:data].each do |line| %>
                {
                    x: Date.parse("<%=line[0].strftime("%b %d, %Y %H:%M:%S %z")%>"),
                    y: <%=line[1]%>,
                    extra: {uuid: null}
                }<%= series[:data].last==line ? '':','%>
                <% end %>
            ],
            visible: true
        },<% end %>];
    console.log(series);

    var hchart = new Highcharts.Chart({
        chart: {
            renderTo: 'chart-<%=@idName%>',
            type: 'spline',
            zoomType: 'x'
        },
        title: {
            text: 'Dados de Medições do NetMetric: <%=@metric.name%>'
        },
        subtitle: {
            text: 'Origem: <%= @source.name %> | Destino: <%= @destination.name %> | Data: <%=@from.strftime('%Y-%m-%d %H:%M:%S %Z')%> à <%=@to.strftime('%Y-%m-%d %H:%M:%S %Z')%>'
        },
        xAxis: {
            type: 'datetime',
            min: Date.parse("<%=@from.strftime("%b %d, %Y %H:%M:%S %z")%>"),
            max: Date.parse("<%=@to.strftime("%b %d, %Y %H:%M:%S %z")%>")
        },
        yAxis: {
            title: {
                text: "<%=@metric.name.upcase %> (<%=@metric.view_unit%>)"
            },
            min: 0
        },
        tooltip: {
            formatter: function () {
                var extras = '';
                objLen = jQuery.map(this.point.extra,function (n, i) {
                    return i;
                }).length;
                if (objLen > 1) {
                    var kpi = this.point.extra;
                    extras += '<b>LAC: </b>' + kpi.lac + '<br />' + '<b>CELLID: </b>' + kpi.cell_id + '<br />';
                    extras += '<b>Marca: </b>' + kpi.brand + '<br />' + '<b>Modelo: </b>' + kpi.model + '<br />';
                    extras += '<b>Tec. Conex.: </b>' + kpi.conn_tech + '<br />' + '<b>Sinal: </b>' + kpi.signal + 'dB<br />';
                    extras += '<b>Atraso DNS: </b>' + kpi.dns_latency + 'ms<br />';
                } else if (this.point.extra.uuid) {
                    extras += 'Clique para obter os KPIs';
                } else {
                    extras += 'Informações KPI não disponíveis para este ponto.';
                }
                return '<strong>' + this.series.name + ': ' + conversion.stringFromMetric("<%= @metric.plugin %>", this.y) + '</strong><br/><em>' +
                        moment(this.x).format('YYYY-MM-DD HH:mm:ss Z') + '</em><br />' + extras;
            }
        },
        plotOptions: {
            series: {
                cursor: 'pointer',
                point: {
                    events: {
                        click: function (evt) {
                            if(evt.currentTarget.extra.uuid != null)
                            jQuery.ajax({
                                url: "<%=show_kpi_url%>",
                                type: 'post',
                                dataType: 'json',
                                data: {
                                    uuid: evt.currentTarget.extra.uuid
                                },
                                success: function (data) {
                                    evt.currentTarget.extra = data;
                                    var wtemp = hchart.chartWidth;
                                    var htemp = hchart.chartHeight;
                                    hchart.setSize(wtemp - 10, htemp - 10, false);
                                    hchart.setSize(wtemp, htemp, false);
                                },
                                error: function (status, msg, error) {
                                    //graphReport.objects[metric].tooltip.refresh([evt.currentTarget]);
                                },
                                headers: {
                                    'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
                                }
                            });
                        }
                    }
                }
            }
        },
        series: series,
        exporting: {
            url: 'http://200.220.254.22/batik/'
        }
    });
</script>