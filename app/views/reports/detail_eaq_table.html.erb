    <!--Metas-->
    <tr>
      <td style="font-weight: bold">Dia\Meta</td>
      <%  @thresholds.each do |threshold| %>
      <td style="text-align: center"><%= @destination.plan.throughput_down %>/<%= @destination.plan.throughput_up %></td>
    <% end %>
    </tr>
    <!--Medidas obtidas para cada dia do mÃªs -->
    <% (1..Time.parse(@month).end_of_month.day).each do |day| %>
    <tr>
      <td style="font-weight: bold"><%= day %></td>
      <%  @thresholds.each do |threshold| %>
          <% median = Median.where(:schedule_id => @schedule).where(:threshold_id => threshold.id).where('start_timestamp >= ?',DateTime.parse(@month).change(:day => day).beginning_of_day).where('start_timestamp <= ?',DateTime.parse(@month).change(:day => day).end_of_day).first
            median = Median.new if median.nil?
          %>
          <td style="text-align: center"><%=
              case threshold.metric.plugin
                when /^throughput/
                  if(threshold.compliance_method == 'mean')
                    up = ((median.dsavg.to_f / 1000)/@destination.plan.throughput_up).round(2).to_s + "%"
                    down = ((median.sdavg.to_f / 1000)/@destination.plan.throughput_down).round(2).to_s + "%"

                  else
                    up = (median.dsavg.to_f / 1000000).round(2).to_s + "Mbps"
                    down = (median.sdavg.to_f / 1000000).round(2).to_s + "Mbps"
                  end
                  (down+'/'+up)
                when 'rtt'
                  ((median.dsavg.to_f * 1000).round(2).to_s + 'ms')
                when 'jitter'
                  ((median.dsavg.to_f * 1000).round(2).to_s + 'ms')
              end


          %></td>
      <% end %>
    </tr>

    <% end %>
    <tr>
      <td  colspan="7" style="font-weight: bold; background-color: #777777;text-align: center"></td>
    </tr>


