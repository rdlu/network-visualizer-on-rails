    <!--Metas-->
    <tr>
      <td style="font-weight: bold">Dia\Meta</td>
      <%  @thresholds.each do |threshold| %>
      <td style="text-align: center; font-weight: bold"><%=
          case threshold.metric.plugin
            when /^throughput/
              if(threshold.compliance_method == 'mean')
                down = (threshold.goal_level * 100).round(3).to_s + "%"
                up =   (threshold.goal_level * 100).round(3).to_s + "%"
                else
                  down = ((@destination.plan.throughput_down.to_f / 1000) * threshold.goal_level.to_f).round(3).to_s + "Mbps"
                  up =   ((@destination.plan.throughput_up.to_f / 1000) * threshold.goal_level.to_f).round(3).to_s + "Mbps"
              end
              down+'/'+up
            when 'jitter'
              threshold.goal_level.to_s + "ms"
            when 'rtt'
              threshold.goal_level.to_s + "ms"
          end
      %></td>
    <% end %>
    </tr>
    <!--Medidas obtidas para cada dia do mÃªs -->
    <% (1..Time.parse(@month).end_of_month.day).each do |day| %>
    <tr>
      <td style="font-weight: bold"><%= day %></td>
      <%  @thresholds.each do |threshold| %>
          <% median = Median.where(:schedule_id => @schedule).where(:threshold_id => threshold.id).where('start_timestamp >= ?',DateTime.parse(@month).change(:day => day).beginning_of_day).where('start_timestamp <= ?',DateTime.parse(@month).change(:day => day).end_of_day).first
            median = Median.new if median.nil?
          %>
          <td style="text-align: center"><%
              case threshold.metric.plugin
                when /^throughput/
                  if(threshold.compliance_method == 'mean')
                    up = (((median.dsavg.to_f / 1000)/@destination.plan.throughput_up.to_f)*100).round(2)
                    down = (((median.sdavg.to_f / 1000)/@destination.plan.throughput_down.to_f)*100).round(2)
                    color_up = up >=(threshold.goal_level * 100).round(3) ? 'green' : 'red'
                    color_down = down >= (threshold.goal_level * 100).round(3) ? 'green' : 'red'
                    up = up.to_s + "%"
                    down = down.to_s + "%"
                    result = "<span style=\"color:#{color_down}\">#{down}</span>/<span style=\"color:#{color_up}\">#{up}</span>".html_safe
                      else
                        up = (median.dsavg.to_f / 1000000).round(3)
                        down = (median.sdavg.to_f / 1000000).round(3)
                        color_up = up >=((@destination.plan.throughput_down.to_f / 1000) * threshold.goal_level.to_f).round(3) ? 'green' : 'red'
                        color_down = down >= ((@destination.plan.throughput_down.to_f / 1000) * threshold.goal_level.to_f).round(3) ? 'green' : 'red'
                        up = up.to_s + "Mbps"
                        down = down.to_s + "Mbps"
                        result = "<span style=\"color:#{color_down}\">#{down}</span>/<span style=\"color:#{color_up}\">#{up}</span>".html_safe
                  end
                when 'rtt'
                  color = (median.dsavg.to_f * 1000).round(2) <= threshold.goal_level ? 'green' : 'red'
                  rate =((median.dsavg.to_f * 1000).round(2).to_s + 'ms')
                  result = "<span style=\"color:#{color}\">#{rate}</span>"
                when 'jitter'
                  color = (median.dsavg.to_f * 1000).round(2) <= threshold.goal_level ? 'green' : 'red'
                  rate =((median.dsavg.to_f * 1000).round(2).to_s + 'ms')
                  result = "<span style=\"color:#{color}\">#{rate}</span>"
                else
                    result =""
              end
          %>
          <%= result.html_safe %>
      <% end %>
    </tr>

    <% end %>
    <tr>
      <td  colspan="7" style="font-weight: bold; background-color: #777777;text-align: center"></td>
    </tr>


